#include "epix/window.h"

using namespace epix;

EPIX_API int glfw::map_key_to_glfw(input::KeyCode key) {
    switch (key) {
        case input::KeyCode::KeyA:
            return GLFW_KEY_A;
        case input::KeyCode::KeyB:
            return GLFW_KEY_B;
        case input::KeyCode::KeyC:
            return GLFW_KEY_C;
        case input::KeyCode::KeyD:
            return GLFW_KEY_D;
        case input::KeyCode::KeyE:
            return GLFW_KEY_E;
        case input::KeyCode::KeyF:
            return GLFW_KEY_F;
        case input::KeyCode::KeyG:
            return GLFW_KEY_G;
        case input::KeyCode::KeyH:
            return GLFW_KEY_H;
        case input::KeyCode::KeyI:
            return GLFW_KEY_I;
        case input::KeyCode::KeyJ:
            return GLFW_KEY_J;
        case input::KeyCode::KeyK:
            return GLFW_KEY_K;
        case input::KeyCode::KeyL:
            return GLFW_KEY_L;
        case input::KeyCode::KeyM:
            return GLFW_KEY_M;
        case input::KeyCode::KeyN:
            return GLFW_KEY_N;
        case input::KeyCode::KeyO:
            return GLFW_KEY_O;
        case input::KeyCode::KeyP:
            return GLFW_KEY_P;
        case input::KeyCode::KeyQ:
            return GLFW_KEY_Q;
        case input::KeyCode::KeyR:
            return GLFW_KEY_R;
        case input::KeyCode::KeyS:
            return GLFW_KEY_S;
        case input::KeyCode::KeyT:
            return GLFW_KEY_T;
        case input::KeyCode::KeyU:
            return GLFW_KEY_U;
        case input::KeyCode::KeyV:
            return GLFW_KEY_V;
        case input::KeyCode::KeyW:
            return GLFW_KEY_W;
        case input::KeyCode::KeyX:
            return GLFW_KEY_X;
        case input::KeyCode::KeyY:
            return GLFW_KEY_Y;
        case input::KeyCode::KeyZ:
            return GLFW_KEY_Z;
        case input::KeyCode::Key0:
            return GLFW_KEY_0;
        case input::KeyCode::Key1:
            return GLFW_KEY_1;
        case input::KeyCode::Key2:
            return GLFW_KEY_2;
        case input::KeyCode::Key3:
            return GLFW_KEY_3;
        case input::KeyCode::Key4:
            return GLFW_KEY_4;
        case input::KeyCode::Key5:
            return GLFW_KEY_5;
        case input::KeyCode::Key6:
            return GLFW_KEY_6;
        case input::KeyCode::Key7:
            return GLFW_KEY_7;
        case input::KeyCode::Key8:
            return GLFW_KEY_8;
        case input::KeyCode::Key9:
            return GLFW_KEY_9;
        case input::KeyCode::KeySpace:
            return GLFW_KEY_SPACE;
        case input::KeyCode::KeyApostrophe:
            return GLFW_KEY_APOSTROPHE;
        case input::KeyCode::KeyComma:
            return GLFW_KEY_COMMA;
        case input::KeyCode::KeyMinus:
            return GLFW_KEY_MINUS;
        case input::KeyCode::KeyPeriod:
            return GLFW_KEY_PERIOD;
        case input::KeyCode::KeySlash:
            return GLFW_KEY_SLASH;
        case input::KeyCode::KeySemicolon:
            return GLFW_KEY_SEMICOLON;
        case input::KeyCode::KeyEqual:
            return GLFW_KEY_EQUAL;
        case input::KeyCode::KeyLeftBracket:
            return GLFW_KEY_LEFT_BRACKET;
        case input::KeyCode::KeyBackslash:
            return GLFW_KEY_BACKSLASH;
        case input::KeyCode::KeyRightBracket:
            return GLFW_KEY_RIGHT_BRACKET;
        case input::KeyCode::KeyGraveAccent:
            return GLFW_KEY_GRAVE_ACCENT;
        case input::KeyCode::KeyWorld1:
            return GLFW_KEY_WORLD_1;
        case input::KeyCode::KeyWorld2:
            return GLFW_KEY_WORLD_2;
        case input::KeyCode::KeyEscape:
            return GLFW_KEY_ESCAPE;
        case input::KeyCode::KeyEnter:
            return GLFW_KEY_ENTER;
        case input::KeyCode::KeyTab:
            return GLFW_KEY_TAB;
        case input::KeyCode::KeyBackspace:
            return GLFW_KEY_BACKSPACE;
        case input::KeyCode::KeyInsert:
            return GLFW_KEY_INSERT;
        case input::KeyCode::KeyDelete:
            return GLFW_KEY_DELETE;
        case input::KeyCode::KeyRight:
            return GLFW_KEY_RIGHT;
        case input::KeyCode::KeyLeft:
            return GLFW_KEY_LEFT;
        case input::KeyCode::KeyDown:
            return GLFW_KEY_DOWN;
        case input::KeyCode::KeyUp:
            return GLFW_KEY_UP;
        case input::KeyCode::KeyPageUp:
            return GLFW_KEY_PAGE_UP;
        case input::KeyCode::KeyPageDown:
            return GLFW_KEY_PAGE_DOWN;
        case input::KeyCode::KeyHome:
            return GLFW_KEY_HOME;
        case input::KeyCode::KeyEnd:
            return GLFW_KEY_END;
        case input::KeyCode::KeyCapsLock:
            return GLFW_KEY_CAPS_LOCK;
        case input::KeyCode::KeyScrollLock:
            return GLFW_KEY_SCROLL_LOCK;
        case input::KeyCode::KeyNumLock:
            return GLFW_KEY_NUM_LOCK;
        case input::KeyCode::KeyPrintScreen:
            return GLFW_KEY_PRINT_SCREEN;
        case input::KeyCode::KeyPause:
            return GLFW_KEY_PAUSE;
        case input::KeyCode::KeyF1:
            return GLFW_KEY_F1;
        case input::KeyCode::KeyF2:
            return GLFW_KEY_F2;
        case input::KeyCode::KeyF3:
            return GLFW_KEY_F3;
        case input::KeyCode::KeyF4:
            return GLFW_KEY_F4;
        case input::KeyCode::KeyF5:
            return GLFW_KEY_F5;
        case input::KeyCode::KeyF6:
            return GLFW_KEY_F6;
        case input::KeyCode::KeyF7:
            return GLFW_KEY_F7;
        case input::KeyCode::KeyF8:
            return GLFW_KEY_F8;
        case input::KeyCode::KeyF9:
            return GLFW_KEY_F9;
        case input::KeyCode::KeyF10:
            return GLFW_KEY_F10;
        case input::KeyCode::KeyF11:
            return GLFW_KEY_F11;
        case input::KeyCode::KeyF12:
            return GLFW_KEY_F12;
        case input::KeyCode::KeyF13:
            return GLFW_KEY_F13;
        case input::KeyCode::KeyF14:
            return GLFW_KEY_F14;
        case input::KeyCode::KeyF15:
            return GLFW_KEY_F15;
        case input::KeyCode::KeyF16:
            return GLFW_KEY_F16;
        case input::KeyCode::KeyF17:
            return GLFW_KEY_F17;
        case input::KeyCode::KeyF18:
            return GLFW_KEY_F18;
        case input::KeyCode::KeyF19:
            return GLFW_KEY_F19;
        case input::KeyCode::KeyF20:
            return GLFW_KEY_F20;
        case input::KeyCode::KeyF21:
            return GLFW_KEY_F21;
        case input::KeyCode::KeyF22:
            return GLFW_KEY_F22;
        case input::KeyCode::KeyF23:
            return GLFW_KEY_F23;
        case input::KeyCode::KeyF24:
            return GLFW_KEY_F24;
        case input::KeyCode::KeyF25:
            return GLFW_KEY_F25;
        case input::KeyCode::KeyKp0:
            return GLFW_KEY_KP_0;
        case input::KeyCode::KeyKp1:
            return GLFW_KEY_KP_1;
        case input::KeyCode::KeyKp2:
            return GLFW_KEY_KP_2;
        case input::KeyCode::KeyKp3:
            return GLFW_KEY_KP_3;
        case input::KeyCode::KeyKp4:
            return GLFW_KEY_KP_4;
        case input::KeyCode::KeyKp5:
            return GLFW_KEY_KP_5;
        case input::KeyCode::KeyKp6:
            return GLFW_KEY_KP_6;
        case input::KeyCode::KeyKp7:
            return GLFW_KEY_KP_7;
        case input::KeyCode::KeyKp8:
            return GLFW_KEY_KP_8;
        case input::KeyCode::KeyKp9:
            return GLFW_KEY_KP_9;
        case input::KeyCode::KeyKpDecimal:
            return GLFW_KEY_KP_DECIMAL;
        case input::KeyCode::KeyKpDivide:
            return GLFW_KEY_KP_DIVIDE;
        case input::KeyCode::KeyKpMultiply:
            return GLFW_KEY_KP_MULTIPLY;
        case input::KeyCode::KeyKpSubtract:
            return GLFW_KEY_KP_SUBTRACT;
        case input::KeyCode::KeyKpAdd:
            return GLFW_KEY_KP_ADD;
        case input::KeyCode::KeyKpEnter:
            return GLFW_KEY_KP_ENTER;
        case input::KeyCode::KeyKpEqual:
            return GLFW_KEY_KP_EQUAL;
        case input::KeyCode::KeyLeftShift:
            return GLFW_KEY_LEFT_SHIFT;
        case input::KeyCode::KeyLeftControl:
            return GLFW_KEY_LEFT_CONTROL;
        case input::KeyCode::KeyLeftAlt:
            return GLFW_KEY_LEFT_ALT;
        case input::KeyCode::KeyLeftSuper:
            return GLFW_KEY_LEFT_SUPER;
        case input::KeyCode::KeyRightShift:
            return GLFW_KEY_RIGHT_SHIFT;
        case input::KeyCode::KeyRightControl:
            return GLFW_KEY_RIGHT_CONTROL;
        case input::KeyCode::KeyRightAlt:
            return GLFW_KEY_RIGHT_ALT;
        case input::KeyCode::KeyRightSuper:
            return GLFW_KEY_RIGHT_SUPER;
        case input::KeyCode::KeyMenu:
            return GLFW_KEY_MENU;
        default:
            return -1;
    }
}

EPIX_API int glfw::map_mouse_button_to_glfw(input::MouseButton button) {
    switch (button) {
        case input::MouseButton::MouseButton1:
            return GLFW_MOUSE_BUTTON_1;
        case input::MouseButton::MouseButton2:
            return GLFW_MOUSE_BUTTON_2;
        case input::MouseButton::MouseButton3:
            return GLFW_MOUSE_BUTTON_3;
        case input::MouseButton::MouseButton4:
            return GLFW_MOUSE_BUTTON_4;
        case input::MouseButton::MouseButton5:
            return GLFW_MOUSE_BUTTON_5;
        case input::MouseButton::MouseButton6:
            return GLFW_MOUSE_BUTTON_6;
        case input::MouseButton::MouseButton7:
            return GLFW_MOUSE_BUTTON_7;
        case input::MouseButton::MouseButton8:
            return GLFW_MOUSE_BUTTON_8;
        default:
            return -1;
    }
}

EPIX_API input::KeyCode glfw::map_glfw_key_to_input(int key) {
    switch (key) {
        case GLFW_KEY_A:
            return input::KeyCode::KeyA;
        case GLFW_KEY_B:
            return input::KeyCode::KeyB;
        case GLFW_KEY_C:
            return input::KeyCode::KeyC;
        case GLFW_KEY_D:
            return input::KeyCode::KeyD;
        case GLFW_KEY_E:
            return input::KeyCode::KeyE;
        case GLFW_KEY_F:
            return input::KeyCode::KeyF;
        case GLFW_KEY_G:
            return input::KeyCode::KeyG;
        case GLFW_KEY_H:
            return input::KeyCode::KeyH;
        case GLFW_KEY_I:
            return input::KeyCode::KeyI;
        case GLFW_KEY_J:
            return input::KeyCode::KeyJ;
        case GLFW_KEY_K:
            return input::KeyCode::KeyK;
        case GLFW_KEY_L:
            return input::KeyCode::KeyL;
        case GLFW_KEY_M:
            return input::KeyCode::KeyM;
        case GLFW_KEY_N:
            return input::KeyCode::KeyN;
        case GLFW_KEY_O:
            return input::KeyCode::KeyO;
        case GLFW_KEY_P:
            return input::KeyCode::KeyP;
        case GLFW_KEY_Q:
            return input::KeyCode::KeyQ;
        case GLFW_KEY_R:
            return input::KeyCode::KeyR;
        case GLFW_KEY_S:
            return input::KeyCode::KeyS;
        case GLFW_KEY_T:
            return input::KeyCode::KeyT;
        case GLFW_KEY_U:
            return input::KeyCode::KeyU;
        case GLFW_KEY_V:
            return input::KeyCode::KeyV;
        case GLFW_KEY_W:
            return input::KeyCode::KeyW;
        case GLFW_KEY_X:
            return input::KeyCode::KeyX;
        case GLFW_KEY_Y:
            return input::KeyCode::KeyY;
        case GLFW_KEY_Z:
            return input::KeyCode::KeyZ;
        case GLFW_KEY_0:
            return input::KeyCode::Key0;
        case GLFW_KEY_1:
            return input::KeyCode::Key1;
        case GLFW_KEY_2:
            return input::KeyCode::Key2;
        case GLFW_KEY_3:
            return input::KeyCode::Key3;
        case GLFW_KEY_4:
            return input::KeyCode::Key4;
        case GLFW_KEY_5:
            return input::KeyCode::Key5;
        case GLFW_KEY_6:
            return input::KeyCode::Key6;
        case GLFW_KEY_7:
            return input::KeyCode::Key7;
        case GLFW_KEY_8:
            return input::KeyCode::Key8;
        case GLFW_KEY_9:
            return input::KeyCode::Key9;
        case GLFW_KEY_SPACE:
            return input::KeyCode::KeySpace;
        case GLFW_KEY_APOSTROPHE:
            return input::KeyCode::KeyApostrophe;
        case GLFW_KEY_COMMA:
            return input::KeyCode::KeyComma;
        case GLFW_KEY_MINUS:
            return input::KeyCode::KeyMinus;
        case GLFW_KEY_PERIOD:
            return input::KeyCode::KeyPeriod;
        case GLFW_KEY_SLASH:
            return input::KeyCode::KeySlash;
        case GLFW_KEY_SEMICOLON:
            return input::KeyCode::KeySemicolon;
        case GLFW_KEY_EQUAL:
            return input::KeyCode::KeyEqual;
        case GLFW_KEY_LEFT_BRACKET:
            return input::KeyCode::KeyLeftBracket;
        case GLFW_KEY_BACKSLASH:
            return input::KeyCode::KeyBackslash;
        case GLFW_KEY_RIGHT_BRACKET:
            return input::KeyCode::KeyRightBracket;
        case GLFW_KEY_GRAVE_ACCENT:
            return input::KeyCode::KeyGraveAccent;
        case GLFW_KEY_WORLD_1:
            return input::KeyCode::KeyWorld1;
        case GLFW_KEY_WORLD_2:
            return input::KeyCode::KeyWorld2;
        case GLFW_KEY_ESCAPE:
            return input::KeyCode::KeyEscape;
        case GLFW_KEY_ENTER:
            return input::KeyCode::KeyEnter;
        case GLFW_KEY_TAB:
            return input::KeyCode::KeyTab;
        case GLFW_KEY_BACKSPACE:
            return input::KeyCode::KeyBackspace;
        case GLFW_KEY_INSERT:
            return input::KeyCode::KeyInsert;
        case GLFW_KEY_DELETE:
            return input::KeyCode::KeyDelete;
        case GLFW_KEY_RIGHT:
            return input::KeyCode::KeyRight;
        case GLFW_KEY_LEFT:
            return input::KeyCode::KeyLeft;
        case GLFW_KEY_DOWN:
            return input::KeyCode::KeyDown;
        case GLFW_KEY_UP:
            return input::KeyCode::KeyUp;
        case GLFW_KEY_PAGE_UP:
            return input::KeyCode::KeyPageUp;
        case GLFW_KEY_PAGE_DOWN:
            return input::KeyCode::KeyPageDown;
        case GLFW_KEY_HOME:
            return input::KeyCode::KeyHome;
        case GLFW_KEY_END:
            return input::KeyCode::KeyEnd;
        case GLFW_KEY_CAPS_LOCK:
            return input::KeyCode::KeyCapsLock;
        case GLFW_KEY_SCROLL_LOCK:
            return input::KeyCode::KeyScrollLock;
        case GLFW_KEY_NUM_LOCK:
            return input::KeyCode::KeyNumLock;
        case GLFW_KEY_PRINT_SCREEN:
            return input::KeyCode::KeyPrintScreen;
        case GLFW_KEY_PAUSE:
            return input::KeyCode::KeyPause;
        case GLFW_KEY_F1:
            return input::KeyCode::KeyF1;
        case GLFW_KEY_F2:
            return input::KeyCode::KeyF2;
        case GLFW_KEY_F3:
            return input::KeyCode::KeyF3;
        case GLFW_KEY_F4:
            return input::KeyCode::KeyF4;
        case GLFW_KEY_F5:
            return input::KeyCode::KeyF5;
        case GLFW_KEY_F6:
            return input::KeyCode::KeyF6;
        case GLFW_KEY_F7:
            return input::KeyCode::KeyF7;
        case GLFW_KEY_F8:
            return input::KeyCode::KeyF8;
        case GLFW_KEY_F9:
            return input::KeyCode::KeyF9;
        case GLFW_KEY_F10:
            return input::KeyCode::KeyF10;
        case GLFW_KEY_F11:
            return input::KeyCode::KeyF11;
        case GLFW_KEY_F12:
            return input::KeyCode::KeyF12;
        case GLFW_KEY_F13:
            return input::KeyCode::KeyF13;
        case GLFW_KEY_F14:
            return input::KeyCode::KeyF14;
        case GLFW_KEY_F15:
            return input::KeyCode::KeyF15;
        case GLFW_KEY_F16:
            return input::KeyCode::KeyF16;
        case GLFW_KEY_F17:
            return input::KeyCode::KeyF17;
        case GLFW_KEY_F18:
            return input::KeyCode::KeyF18;
        case GLFW_KEY_F19:
            return input::KeyCode::KeyF19;
        case GLFW_KEY_F20:
            return input::KeyCode::KeyF20;
        case GLFW_KEY_F21:
            return input::KeyCode::KeyF21;
        case GLFW_KEY_F22:
            return input::KeyCode::KeyF22;
        case GLFW_KEY_F23:
            return input::KeyCode::KeyF23;
        case GLFW_KEY_F24:
            return input::KeyCode::KeyF24;
        case GLFW_KEY_F25:
            return input::KeyCode::KeyF25;
        case GLFW_KEY_KP_0:
            return input::KeyCode::KeyKp0;
        case GLFW_KEY_KP_1:
            return input::KeyCode::KeyKp1;
        case GLFW_KEY_KP_2:
            return input::KeyCode::KeyKp2;
        case GLFW_KEY_KP_3:
            return input::KeyCode::KeyKp3;
        case GLFW_KEY_KP_4:
            return input::KeyCode::KeyKp4;
        case GLFW_KEY_KP_5:
            return input::KeyCode::KeyKp5;
        case GLFW_KEY_KP_6:
            return input::KeyCode::KeyKp6;
        case GLFW_KEY_KP_7:
            return input::KeyCode::KeyKp7;
        case GLFW_KEY_KP_8:
            return input::KeyCode::KeyKp8;
        case GLFW_KEY_KP_9:
            return input::KeyCode::KeyKp9;
        case GLFW_KEY_KP_DECIMAL:
            return input::KeyCode::KeyKpDecimal;
        case GLFW_KEY_KP_DIVIDE:
            return input::KeyCode::KeyKpDivide;
        case GLFW_KEY_KP_MULTIPLY:
            return input::KeyCode::KeyKpMultiply;
        case GLFW_KEY_KP_SUBTRACT:
            return input::KeyCode::KeyKpSubtract;
        case GLFW_KEY_KP_ADD:
            return input::KeyCode::KeyKpAdd;
        case GLFW_KEY_KP_ENTER:
            return input::KeyCode::KeyKpEnter;
        case GLFW_KEY_KP_EQUAL:
            return input::KeyCode::KeyKpEqual;
        case GLFW_KEY_LEFT_SHIFT:
            return input::KeyCode::KeyLeftShift;
        case GLFW_KEY_LEFT_CONTROL:
            return input::KeyCode::KeyLeftControl;
        case GLFW_KEY_LEFT_ALT:
            return input::KeyCode::KeyLeftAlt;
        case GLFW_KEY_LEFT_SUPER:
            return input::KeyCode::KeyLeftSuper;
        case GLFW_KEY_RIGHT_SHIFT:
            return input::KeyCode::KeyRightShift;
        case GLFW_KEY_RIGHT_CONTROL:    
            return input::KeyCode::KeyRightControl;
        case GLFW_KEY_RIGHT_ALT:
            return input::KeyCode::KeyRightAlt;
        case GLFW_KEY_RIGHT_SUPER:
            return input::KeyCode::KeyRightSuper;
        case GLFW_KEY_MENU:
            return input::KeyCode::KeyMenu;
        default:
            return input::KeyCode::KeyUnknown;
    }
}
EPIX_API input::MouseButton glfw::map_glfw_mouse_button_to_input(int button) {
    switch (button) {
        case GLFW_MOUSE_BUTTON_1:
            return input::MouseButton::MouseButton1;
        case GLFW_MOUSE_BUTTON_2:
            return input::MouseButton::MouseButton2;
        case GLFW_MOUSE_BUTTON_3:
            return input::MouseButton::MouseButton3;
        case GLFW_MOUSE_BUTTON_4:
            return input::MouseButton::MouseButton4;
        case GLFW_MOUSE_BUTTON_5:
            return input::MouseButton::MouseButton5;
        case GLFW_MOUSE_BUTTON_6:
            return input::MouseButton::MouseButton6;
        case GLFW_MOUSE_BUTTON_7:
            return input::MouseButton::MouseButton7;
        case GLFW_MOUSE_BUTTON_8:
            return input::MouseButton::MouseButton8;
        default:
            return input::MouseButton::MouseButtonUnknown;
    }
}