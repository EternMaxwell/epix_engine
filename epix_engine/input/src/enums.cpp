#include "epix/input/enums.h"

using namespace epix;

EPIX_API std::string_view input::key_name(input::KeyCode key) {
    switch (key) {
        case input::KeyCode::KeyA:
            return "A";
        case input::KeyCode::KeyB:
            return "B";
        case input::KeyCode::KeyC:
            return "C";
        case input::KeyCode::KeyD:
            return "D";
        case input::KeyCode::KeyE:
            return "E";
        case input::KeyCode::KeyF:
            return "F";
        case input::KeyCode::KeyG:
            return "G";
        case input::KeyCode::KeyH:
            return "H";
        case input::KeyCode::KeyI:
            return "I";
        case input::KeyCode::KeyJ:
            return "J";
        case input::KeyCode::KeyK:
            return "K";
        case input::KeyCode::KeyL:
            return "L";
        case input::KeyCode::KeyM:
            return "M";
        case input::KeyCode::KeyN:
            return "N";
        case input::KeyCode::KeyO:
            return "O";
        case input::KeyCode::KeyP:
            return "P";
        case input::KeyCode::KeyQ:
            return "Q";
        case input::KeyCode::KeyR:
            return "R";
        case input::KeyCode::KeyS:
            return "S";
        case input::KeyCode::KeyT:
            return "T";
        case input::KeyCode::KeyU:
            return "U";
        case input::KeyCode::KeyV:
            return "V";
        case input::KeyCode::KeyW:
            return "W";
        case input::KeyCode::KeyX:
            return "X";
        case input::KeyCode::KeyY:
            return "Y";
        case input::KeyCode::KeyZ:
            return "Z";
        case input::KeyCode::Key0:
            return "0";
        case input::KeyCode::Key1:
            return "1";
        case input::KeyCode::Key2:
            return "2";
        case input::KeyCode::Key3:
            return "3";
        case input::KeyCode::Key4:
            return "4";
        case input::KeyCode::Key5:
            return "5";
        case input::KeyCode::Key6:
            return "6";
        case input::KeyCode::Key7:
            return "7";
        case input::KeyCode::Key8:
            return "8";
        case input::KeyCode::Key9:
            return "9";
        case input::KeyCode::KeySpace:
            return "Space";
        case input::KeyCode::KeyApostrophe:
            return "Apostrophe(')";
        case input::KeyCode::KeyComma:
            return "Comma(,)";
        case input::KeyCode::KeyMinus:
            return "Minus(-)";
        case input::KeyCode::KeyPeriod:
            return "Period(.)";
        case input::KeyCode::KeySlash:
            return "Slash(/)";
        case input::KeyCode::KeySemicolon:
            return "Semicolon(;)";
        case input::KeyCode::KeyEqual:
            return "Equal(=)";
        case input::KeyCode::KeyLeftBracket:
            return "LeftBracket([)";
        case input::KeyCode::KeyBackslash:
            return "Backslash(\\)";
        case input::KeyCode::KeyRightBracket:
            return "RightBracket(])";
        case input::KeyCode::KeyGraveAccent:
            return "GraveAccent(`)";
        case input::KeyCode::KeyWorld1:
            return "World1";
        case input::KeyCode::KeyWorld2:
            return "World2";
        case input::KeyCode::KeyEscape:
            return "Escape";
        case input::KeyCode::KeyEnter:
            return "Enter";
        case input::KeyCode::KeyTab:
            return "Tab";
        case input::KeyCode::KeyBackspace:
            return "Backspace";
        case input::KeyCode::KeyInsert:
            return "Insert";
        case input::KeyCode::KeyDelete:
            return "Delete";
        case input::KeyCode::KeyRight:
            return "Right";
        case input::KeyCode::KeyLeft:
            return "Left";
        case input::KeyCode::KeyDown:
            return "Down";
        case input::KeyCode::KeyUp:
            return "Up";
        case input::KeyCode::KeyPageUp:
            return "PageUp";
        case input::KeyCode::KeyPageDown:
            return "PageDown";
        case input::KeyCode::KeyHome:
            return "Home";
        case input::KeyCode::KeyEnd:
            return "End";
        case input::KeyCode::KeyCapsLock:
            return "CapsLock";
        case input::KeyCode::KeyScrollLock:
            return "ScrollLock";
        case input::KeyCode::KeyNumLock:
            return "NumLock";
        case input::KeyCode::KeyPrintScreen:
            return "PrintScreen";
        case input::KeyCode::KeyPause:
            return "Pause";
        case input::KeyCode::KeyF1:
            return "F1";
        case input::KeyCode::KeyF2:
            return "F2";
        case input::KeyCode::KeyF3:
            return "F3";
        case input::KeyCode::KeyF4:
            return "F4";
        case input::KeyCode::KeyF5:
            return "F5";
        case input::KeyCode::KeyF6:
            return "F6";
        case input::KeyCode::KeyF7:
            return "F7";
        case input::KeyCode::KeyF8:
            return "F8";
        case input::KeyCode::KeyF9:
            return "F9";
        case input::KeyCode::KeyF10:
            return "F10";
        case input::KeyCode::KeyF11:
            return "F11";
        case input::KeyCode::KeyF12:
            return "F12";
        case input::KeyCode::KeyF13:
            return "F13";
        case input::KeyCode::KeyF14:
            return "F14";
        case input::KeyCode::KeyF15:
            return "F15";
        case input::KeyCode::KeyF16:
            return "F16";
        case input::KeyCode::KeyF17:
            return "F17";
        case input::KeyCode::KeyF18:
            return "F18";
        case input::KeyCode::KeyF19:
            return "F19";
        case input::KeyCode::KeyF20:
            return "F20";
        case input::KeyCode::KeyF21:
            return "F21";
        case input::KeyCode::KeyF22:
            return "F22";
        case input::KeyCode::KeyF23:
            return "F23";
        case input::KeyCode::KeyF24:
            return "F24";
        case input::KeyCode::KeyF25:
            return "F25";
        case input::KeyCode::KeyKp0:
            return "Kp0";
        case input::KeyCode::KeyKp1:
            return "Kp1";
        case input::KeyCode::KeyKp2:
            return "Kp2";
        case input::KeyCode::KeyKp3:
            return "Kp3";
        case input::KeyCode::KeyKp4:
            return "Kp4";
        case input::KeyCode::KeyKp5:
            return "Kp5";
        case input::KeyCode::KeyKp6:
            return "Kp6";
        case input::KeyCode::KeyKp7:
            return "Kp7";
        case input::KeyCode::KeyKp8:
            return "Kp8";
        case input::KeyCode::KeyKp9:
            return "Kp9";
        case input::KeyCode::KeyKpDecimal:
            return "KpDecimal(.)";
        case input::KeyCode::KeyKpDivide:
            return "KpDivide(/)";
        case input::KeyCode::KeyKpMultiply:
            return "KpMultiply(*)";
        case input::KeyCode::KeyKpSubtract:
            return "KpSubtract(-)";
        case input::KeyCode::KeyKpAdd:
            return "KpAdd(+)";
        case input::KeyCode::KeyKpEnter:
            return "KpEnter";
        case input::KeyCode::KeyKpEqual:
            return "KpEqual(=)";
        case input::KeyCode::KeyLeftShift:
            return "LeftShift";
        case input::KeyCode::KeyLeftControl:
            return "LeftControl";
        case input::KeyCode::KeyLeftAlt:
            return "LeftAlt";
        case input::KeyCode::KeyLeftSuper:
            return "LeftSuper";
        case input::KeyCode::KeyRightShift:
            return "RightShift";
        case input::KeyCode::KeyRightControl:
            return "RightControl";
        case input::KeyCode::KeyRightAlt:
            return "RightAlt";
        case input::KeyCode::KeyRightSuper:
            return "RightSuper";
        case input::KeyCode::KeyMenu:
            return "Menu";
        default:
            return "Unknown";
    }
}

EPIX_API std::string_view input::mouse_button_name(input::MouseButton button) {
    switch (button) {
        case input::MouseButton::MouseButton1:
            return "MouseButton1(Left)";
        case input::MouseButton::MouseButton2:
            return "MouseButton2(Right)";
        case input::MouseButton::MouseButton3:
            return "MouseButton3(Middle)";
        case input::MouseButton::MouseButton4:
            return "MouseButton4";
        case input::MouseButton::MouseButton5:
            return "MouseButton5";
        case input::MouseButton::MouseButton6:
            return "MouseButton6";
        case input::MouseButton::MouseButton7:
            return "MouseButton7";
        case input::MouseButton::MouseButton8:
            return "MouseButton8";
        case input::MouseButton::MouseButtonLast:
            return "Last";
        default:
            return "Unknown";
    }
}

EPIX_API size_t std::hash<epix::input::KeyCode>::operator()(
    const epix::input::KeyCode& key
) const {
    return std::hash<int>()(static_cast<int>(key));
}
EPIX_API size_t std::hash<epix::input::MouseButton>::operator()(
    const epix::input::MouseButton& button
) const {
    return std::hash<int>()(static_cast<int>(button));
}