cmake_minimum_required(VERSION 3.21)

file(GLOB_RECURSE MODULE_SOURCES "src/*.c" "src/*.cpp")
set(ENGINE_SOURCES ${ENGINE_SOURCES} ${MODULE_SOURCES} PARENT_SCOPE)
set(ENGINE_INCLUDES ${ENGINE_INCLUDES} ${CMAKE_CURRENT_SOURCE_DIR}/include PARENT_SCOPE)
add_library(epix_wgpu STATIC ${MODULE_SOURCES})
if(EPIX_ENABLE_TRACY)
    target_compile_definitions(epix_wgpu PRIVATE EPIX_ENABLE_TRACY)
endif()
target_include_directories(epix_wgpu PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)

target_link_libraries(epix_wgpu PUBLIC epix::app)
target_link_libraries(epix_wgpu PUBLIC epix::window)
target_link_libraries(epix_wgpu PUBLIC webgpu)

if (GLFW_BUILD_COCOA)
    target_compile_definitions(epix_wgpu PRIVATE _GLFW_COCOA)
    target_compile_options(epix_wgpu PRIVATE -x objective-c)
    target_link_libraries(epix_wgpu PRIVATE "-framework Cocoa" "-framework CoreVideo" "-framework IOKit" "-framework QuartzCore")
endif()
if (GLFW_BUILD_WIN32)
    target_compile_definitions(epix_wgpu PRIVATE _GLFW_WIN32)
endif()
if (GLFW_BUILD_X11)
    target_compile_definitions(epix_wgpu PRIVATE _GLFW_X11)
endif()
if (GLFW_BUILD_WAYLAND)
    target_compile_definitions(epix_wgpu PRIVATE _GLFW_WAYLAND)
endif()

add_library(epix::webgpu ALIAS epix_wgpu)

add_subdirectory(tests)